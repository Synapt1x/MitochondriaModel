For more details to the changes I've carried out for my project, see the LaTeX file for MATH 8410

=== February 9, 2015 ===
- Changes to equations
- Change to entire GUI, old GUI can be found in 'Old GUI' folder
- Derivative system changed to incorporate a decoupled system by having 'type' also be of 'decoupled'

=== February 10, 2015 ===
- Working GUI demonstration using arbitrary functions graphed for OCR and H_P stored in new folder
- Began incorporated ode45 solving derivative system

=== February 11, 2015 ===
- Working solution system using ode45 is found in 'After first use of derivatives func'
- Next step is to then run an optimization algorithm to fit the data to the solutions of the derivatives solutions

=== February 16, 2015 ===
- First attempts to code a GA are found in the folder 'First starting to code GA'
- Initially tried to use the built-in GA function in matlab, but decided against it as it was taking far too long and it wasn't clear how encoding was done and how mutations/crossovers were handled

=== February 18, 2015 ===
- A custom coded GA is in place, but the mutations and crossovers are not correct for the encoding type
- This error is evident in the size of mutations and crossover; what is needed is to encode the real-values as binary with increasing (or decreasing) significant digits for the binary representation
	- Then cause mutations in certain bits between significant digits instead of changing the 
	real values
- The full system before switching to binary encoding is found in the folder 'Before Binary Encoding'

=== Febraury 22, 2015 ===
- Encoding the real-values into binary, and then changing the code in the mutations and crossovers to change the digits in these binary representations accordingly was started
- Using the 'Breeder Genetic Algorithm', probability of mutation = 1/n for n parameters, and the mutation and crossover algorithms were changed so that binary representations weren't necessary
- The genetic algorithm was completed, using the breeding algorithm
- Often, fitness values converge to approximately fit = 130~150. This is fairly accurate to the real data that is input into the model
- The only problem, however, is that the model is running very long
	- Some solvers take upwards of 30 seconds to calculate, resulting in a very long process
	for each population

=== February 23, 2015 ===
- The working GA has been placed into the folder 'Before parllelizing Code'
- Attempts to parallelize the code and use the parfor loop command instead of for
- The number of individuals in the population has been changed to a rule of thumb value where population size = num_genes^2
	- in this case, there are 35 parameter values so a population of 1225 is ideal

=== February 25, 2015 ===
- After discussing with Stephanie:
	- Separated all files into new folders: 'Before Decoupling GA' for keeping the 
	current model before changing the parameters and updating the GA for decoupling the
	system.
	- The second folder, 'Sensitivity Analysis', is separated solely just to incorporate
	code to play with the parameters for determining the sensitivity of each parameter
	separately.
	- Need to update latex file to discuss the changes implemented into the model
- In the GA, instead of interpolating the gradient to find OCR, evaluate directly from derivative system
	- Instead of interpolating F4 values as well, can use F4+-epsilon around the t value
	that we're looking for

=== March 2, 2015 ===
- Began implementing the changes outlined in February 25, 2015 update
- Folders were re-made after implementing the gradient/weighting changes
	- New function 'weighted_interp' added to model to handle these changes
- Began changing the entire code to instead either choose between decoupled or coupled system
- Conversion to decoupled system
	- The pre-decoupled system was stored in the relevant folder

=== March 5, 2015 ===
- Worked on incorporating Elitism and Niching into the GA (only first starting to implement these ideas)
- Talked to Jason Fiege about using Qubist; to use his evolutionary algorithm
- Began incorporating sliders and graphs for all concentrations (and rates) into the GUI
	- Older code found in folder 'Before all graphs'

=== March 7, 2015 ===
- Reduced the complexity of the system a bit by removing the cyt c ox and water equations in 'decoupled_derivative_system.m' since these equations are not involved as inputs nor outputs explicitly
	- Older code foud in folder 'Before decoupled equations reduction'

=== March 17, 2015 ===
- The system was organized to take in real data, specifically oxygen concentration data
- The 'weighted_interp.m' was changed to instead of outputting OCR, acts as a method of interpolating
- After this was taken care of, a copy of all of the files was stored in folder 'Before Elitism' right before incorporating elitism into the GA

=== May 6, 2015 ===
- After setting up Ferret with my model, I will then be changing over concentrations into normalized ratios instead
- Before this changeover, but after setting up Ferret, a copy of all of the files was stred in the folder 'Before Converting concentrations to ratios - May 2015'
- Additionally, added D_H as a parameter instead of a constant

