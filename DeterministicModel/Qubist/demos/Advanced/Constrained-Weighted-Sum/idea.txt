Pencil beam n: p_n=masking array: pixel values "on" --> 1, "off" --> 0.


dose D=sum(d_i); d_i=c_i*p_i

p_i's are fixed.  c_i's can be varied.

Consider another masking array: PTV: 1's in PTV structure, 0's outside

Ideally, want std(d_i(PTV)) --> min wrt c_i

Simplify: p_i --> p_i(PTV).  Need only minimize std(d_i) wrt c_i

F=std(D)=sum(d_i^2-mean(d_i)^2)
F=sum(d_i^2)-N*mean(d_i)^2
F=sum(c_i^2*p_i^2)-sum(c_j*p_j)^2/N
F=sum(c_i^2*p_i^2)-sum(c_j*p_j)^2/N
dF/dc_k=2*c_k*p_k^2-2*sum(c_j*p_j)*p_j*delta_jk/N
=2*c_k*p_k^2-2*c_k*p_k^2/N
wtf..